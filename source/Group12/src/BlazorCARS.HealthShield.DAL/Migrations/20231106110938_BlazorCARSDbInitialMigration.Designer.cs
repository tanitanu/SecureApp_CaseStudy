// <auto-generated />
using System;
using BlazorCARS.HealthShield.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorCARS.HealthShield.DAL.Migrations
{
    [DbContext(typeof(BlazorCARSDBContext))]
    [Migration("20231106110938_BlazorCARSDbInitialMigration")]
    partial class BlazorCARSDbInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.HasKey("CountryId")
                        .HasName("PK_CountryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Country_Name");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CreatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "Seeded",
                            IsDeleted = false,
                            Name = "India",
                            UpdatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "Seeded"
                        });
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalId"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(17);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(16);

                    b.Property<string>("Discrimination")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(14);

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(13);

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(12);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(20);

                    b.Property<string>("Landmark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("LicenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(9);

                    b.Property<string>("PrimaryContact")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(10);

                    b.Property<string>("RegistrationStatus")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(15);

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(11);

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(19);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(18);

                    b.HasKey("HospitalId")
                        .HasName("PK_HospitalId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Inventory_Name");

                    b.HasIndex("StateId");

                    b.ToTable("Hospital", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(7);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<int>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(10);

                    b.Property<int>("OpenStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(4);

                    b.Property<int>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(5);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(9);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(8);

                    b.Property<int>("VaccineId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("InventoryId")
                        .HasName("PK_InventoryId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("HospitalId", "VaccineId")
                        .IsUnique()
                        .HasDatabaseName("UQ_Inventory_HospitalId_VaccineId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.InventoryTransaction", b =>
                {
                    b.Property<int>("InventoryTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryTransactionId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(9);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(8);

                    b.Property<int>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(12);

                    b.Property<DateTime>("ReceivedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<int>("ReceivedQty")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("RefNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(11);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(10);

                    b.Property<int>("VaccineId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("InventoryTransactionId")
                        .HasName("PK_InventoryTransactionId");

                    b.HasIndex("HospitalId");

                    b.HasIndex("VaccineId");

                    b.ToTable("InventoryTransaction", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Recipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientId"));

                    b.Property<string>("AadhaarNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(4);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(9);

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(21);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(20);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<string>("DependentRecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(18);

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(19);

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(16);

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(15);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(24);

                    b.Property<string>("Landmark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(8);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(12);

                    b.Property<string>("PrimaryContact")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(13);

                    b.Property<string>("RelationshipType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(17);

                    b.Property<string>("SecondaryContact")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(14);

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(23);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(22);

                    b.HasKey("RecipientId")
                        .HasName("PK_RecipientId");

                    b.HasIndex("AadhaarNo")
                        .IsUnique()
                        .HasDatabaseName("UQ_Inventory_AadhaarNo");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Recipient", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(7);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.HasKey("StateId")
                        .HasName("PK_StateId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_State_Name");

                    b.ToTable("State", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.HasKey("UserRoleId")
                        .HasName("PK_RoleId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_UserRole_Name");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            CreatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "Seeded",
                            IsDeleted = false,
                            Name = "Super Admin",
                            UpdatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "Seeded"
                        },
                        new
                        {
                            UserRoleId = 2,
                            CreatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "Seeded",
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "Seeded"
                        },
                        new
                        {
                            UserRoleId = 3,
                            CreatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "Seeded",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedDateTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedUser = "Seeded"
                        });
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.UserStore", b =>
                {
                    b.Property<int>("UserStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserStoreId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<int?>("DiscriminationId")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(9);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserStoreId")
                        .HasName("PK_UserStorreId");

                    b.HasIndex("DiscriminationId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("UQ_UserStore_UserName");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserStore", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(9);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.HasKey("VaccineId")
                        .HasName("PK_VaccineId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UQ_Vaccine_Name");

                    b.ToTable("Vaccine", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.VaccineRegistration", b =>
                {
                    b.Property<int>("VaccineRegistrationId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineRegistrationId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(8);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(11);

                    b.Property<bool>("IsVaccinated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(4);

                    b.Property<int>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(10);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(9);

                    b.Property<int>("VaccineScheduleId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("VaccineRegistrationId")
                        .HasName("PK_VaccineRegistrationId");

                    b.HasIndex("VaccineScheduleId");

                    b.HasIndex("RecipientId", "Dose")
                        .IsUnique()
                        .HasDatabaseName("UQ_Inventory_RecipientId_Dose");

                    b.ToTable("VaccineRegistration", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.VaccineSchedule", b =>
                {
                    b.Property<int>("VaccineScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineScheduleId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(7);

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<int>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(10);

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(9);

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(8);

                    b.Property<int>("VaccineId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("VaccineScheduleId")
                        .HasName("PK_VaccineScheduleId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("HospitalId", "VaccineId", "ScheduleDate", "TimeSlot")
                        .IsUnique()
                        .HasDatabaseName("UQ_Inventory_HospitalId_VaccineId_ScheduleDate_TimeSlot");

                    b.ToTable("VaccineSchedule", (string)null);
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Hospital", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_Country_Hospital_CountryId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.State", null)
                        .WithMany()
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK_State_Hospital_StateId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Inventory", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Hospital", null)
                        .WithMany()
                        .HasForeignKey("HospitalId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospital_Inventory_HospitalId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Vaccine", null)
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .IsRequired()
                        .HasConstraintName("FK_Vaccine_Inventory_VaccineId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.InventoryTransaction", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Hospital", null)
                        .WithMany()
                        .HasForeignKey("HospitalId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospital_InventoryTransaction_HospitalId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Vaccine", null)
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .IsRequired()
                        .HasConstraintName("FK_Vaccine_InventoryTransaction_VaccineId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.Recipient", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_Country_Recipient_CountryId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.State", null)
                        .WithMany()
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK_State_Recipient_StateId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.State", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_Country_State_CountryId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.UserStore", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Hospital", null)
                        .WithMany()
                        .HasForeignKey("DiscriminationId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospital_UserStore_DiscriminationId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Recipient", null)
                        .WithMany()
                        .HasForeignKey("DiscriminationId")
                        .IsRequired()
                        .HasConstraintName("FK_Recipient_UserStore_DiscriminationId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.UserRole", null)
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_UserStore_UserRoleId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.VaccineRegistration", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Recipient", null)
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .IsRequired()
                        .HasConstraintName("FK_Recipient_VaccineRegistration_HospitalId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.VaccineSchedule", null)
                        .WithMany()
                        .HasForeignKey("VaccineScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK_VaccineSchedule_VaccineRegistration_VaccineScheduleId");
                });

            modelBuilder.Entity("BlazorCARS.HealthShield.DAL.Entity.VaccineSchedule", b =>
                {
                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Hospital", null)
                        .WithMany()
                        .HasForeignKey("HospitalId")
                        .IsRequired()
                        .HasConstraintName("FK_Hospital_VaccineSchedule_HospitalId");

                    b.HasOne("BlazorCARS.HealthShield.DAL.Entity.Vaccine", null)
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .IsRequired()
                        .HasConstraintName("FK_Vaccine_VaccineSchedule_VaccineId");
                });
#pragma warning restore 612, 618
        }
    }
}
