// <auto-generated />
using System;
using ElectronicStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicStoreAPI.Migrations
{
    [DbContext(typeof(ElecStoreDBContext))]
    partial class ElecStoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicStoreAPI.Models.Domain.Brand", b =>
                {
                    b.Property<Guid>("BrandCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("BrandCode");

                    b.ToTable("BrandMstr");
                });

            modelBuilder.Entity("ElectronicStoreAPI.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("CatCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CatCode");

                    b.ToTable("CategoryMstr");
                });

            modelBuilder.Entity("ElectronicStoreAPI.Models.Domain.Product", b =>
                {
                    b.Property<string>("ProdModelNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProdBrandBrandCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdCatCatCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ProdMRP")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProdPrice")
                        .HasColumnType("bigint");

                    b.Property<short>("ProdQty")
                        .HasColumnType("smallint");

                    b.HasKey("ProdModelNo");

                    b.HasIndex("ProdBrandBrandCode");

                    b.HasIndex("ProdCatCatCode");

                    b.ToTable("ProductMstr");
                });

            modelBuilder.Entity("ElectronicStoreAPI.Models.Domain.Product", b =>
                {
                    b.HasOne("ElectronicStoreAPI.Models.Domain.Brand", "ProdBrand")
                        .WithMany()
                        .HasForeignKey("ProdBrandBrandCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStoreAPI.Models.Domain.Category", "ProdCat")
                        .WithMany()
                        .HasForeignKey("ProdCatCatCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdBrand");

                    b.Navigation("ProdCat");
                });
#pragma warning restore 612, 618
        }
    }
}
